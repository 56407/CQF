###################################
SIMULATIONS = 100
###################################

EU V(T) = 10.0892013234
________ ARITHMETIC ________
Asian C_c(T) = 5.54659143575
Asian C_d(T) = 5.35471317848
________ GEOMETRIC ________
Asian C_c(T) = 5.33383690461

###################################
SIMULATIONS = 1,000
###################################

EU V(T) = 10.6108812797
________ ARITHMETIC ________
Asian C_c(T) = 5.78380052661 #continuous
Asian C_d(T) = 5.56394331519 #discrete
________ GEOMETRIC ________
Asian C_c(T) = 5.56411924943

###################################
SIMULATIONS = 10,000
###################################

EU V(T) = 10.3885154013
________ ARITHMETIC ________
Asian C_c(T) = 5.7713372896 #continuous
Asian C_d(T) = 5.5618419093 # discrete
________ GEOMETRIC ________
Asian C_c(T) = 5.55281242283

##########################################################################

# -----------------------------------------------------------------------
# SETTINGS
# -----------------------------------------------------------------------

# Allows plots to be embedded in notebook
%matplotlib inline

import seaborn as sns

# Sets plot size in notebook
import matplotlib.pylab as pylab
pylab.rcParams['figure.figsize'] = (10, 6)

# Appends relevant path where class lives so it can be imported in notebook
import sys
sys.path.append("C:\\Users\\Tanya.Sandoval\\_QT\\simpleQT\\backtester")
sys.path.append("C:\\Users\\Tanya.Sandoval\\_QT\\simpleQT\\dougal")

import CMACs
reload(CMACs)
from CMACs import *

from datetime import datetime

##########################################################################

# Start ipython notebook
C:\Apps\Anaconda2\envs\simpleQT\python.exe C:\Apps\Anaconda2\envs\simpleQT\Scripts\ipython-script.py notebook --no-browser --ip 127.0.0.1 --port 8888

# Convert to latex (from within latex dir)
ipython nbconvert --to latex ..\asianOptionPricing.ipynb

##########################################################################

plt.legend(loc='lower left', borderaxespad=0., fontsize='small')
df_S_plus = pd.DataFrame(data=S_plus, index=t_index, columns=colNames)

##########################################################################
##########################################################################

## Continuous vs Discrete Sampling

For practical and legal reasons path-dependent quantities are
never measured continuously.

There is minimum time step between sampling of the path dependent quantity, since from a practical viewpoint it is difficult to incorporate every single traded price into an average, for example, data can be unreliable and the exact time of a trade may not be known accurately

Within the context of MC, we define the following:

--- put here of evolution of AC pricing vs number of time steps for continuous and discrete case
